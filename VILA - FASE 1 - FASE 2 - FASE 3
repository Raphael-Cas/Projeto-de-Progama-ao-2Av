
#include <stdio.h>
#include <stdlib.h> 
#include <conio.h>   
#include <windows.h>  
#include <string.h>  
#include <locale.h>   
#include <time.h>     

#define TAM 20
#define MAX_FALAS 6
#define TAM_FALA 200


int temChave = 0;
int npcX = 0, npcY = 0; 
int dialogoAtivo = 0;
int indiceFalaAtual = 0;
char falasNPC[MAX_FALAS][TAM_FALA];
int mapaAtualTipo = 0; 

unsigned int currentSeed = 0;

void moverCursor(int x, int y) {
    COORD pos = { x * 2, y };
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

void desenharMapa(char mapa[TAM][TAM]) {
    for (int i = 0; i < TAM; i++) {
        for (int j = 0; j < TAM; j++) {
            printf("%c ", mapa[i][j]);
        }
        printf("\n");
    }
}


int podeMover(char mapa[TAM][TAM], int x, int y) {
  
    if (mapa[y][x] == '*' || mapa[y][x] == '#') return 0;
    
    if (mapa[y][x] == 'D') return 0;
    
    return 1; 
}

void desenharCasa2x3(char mapa[TAM][TAM], int startX, int startY) {
    if (startX + 1 >= TAM || startY + 2 >= TAM) return;
    mapa[startY][startX] = '/';
    mapa[startY][startX + 1] = '\\';
    mapa[startY + 1][startX] = '*';
    mapa[startY + 1][startX + 1] = '*';
    mapa[startY + 2][startX] = '*';
    mapa[startY + 2][startX + 1] = '*';
}

void desenharCasaMaior(char mapa[TAM][TAM], int startX, int startY, int* portaX, int* portaY) {
    if (startX + 2 >= TAM || startY + 3 >= TAM) return;
    mapa[startY][startX + 1] = '*';
    mapa[startY + 1][startX] = '/';
    mapa[startY + 1][startX + 1] = '|';
    mapa[startY + 1][startX + 2] = '\\';
    mapa[startY + 2][startX] = '*';
    mapa[startY + 2][startX + 1] = '*';
    mapa[startY + 2][startX + 2] = '*';
    mapa[startY + 3][startX] = '*';
    mapa[startY + 3][startX + 1] = 'D'; 
    mapa[startY + 3][startX + 2] = '*';

    if (portaX != NULL) *portaX = startX + 1;
    if (portaY != NULL) *portaY = startY + 3;
    
   
    if (mapaAtualTipo == 0) { 
        npcX = startX - 2;
        npcY = startY + 3;
        if (npcX >= 0 && npcY >= 0 && npcX < TAM && npcY < TAM) {
            mapa[npcY][npcX] = 'P'; 
        }
    }
}


void desenharCasaInvertida(char mapa[TAM][TAM], int startX, int startY, int* portaX, int* portaY) {
    if (startX + 2 >= TAM || startY + 3 >= TAM) return;
    
 
    mapa[startY][startX] = '#';
    mapa[startY][startX + 1] = 'D'; 
    mapa[startY][startX + 2] = '#';

   
    mapa[startY + 1][startX] = '#';
    mapa[startY + 1][startX + 1] = '#';
    mapa[startY + 1][startX + 2] = '#';

   
    mapa[startY + 2][startX] = '\\';
    mapa[startY + 2][startX + 1] = '|';
    mapa[startY + 2][startX + 2] = '/';
    mapa[startY + 3][startX + 1] = '#'; 

    if (portaX != NULL) *portaX = startX + 1;
    if (portaY != NULL) *portaY = startY; 
}



void carregarMapa(char mapa[TAM][TAM], int* playerX, int* playerY, int map_type) {
    
    temChave = 0;
    dialogoAtivo = 0;
    indiceFalaAtual = 0;
    mapaAtualTipo = map_type; 

      for (int i = 0; i < TAM; i++)
        for (int j = 0; j < TAM; j++)
            mapa[i][j] = '.';

    char borderChar = (mapaAtualTipo == 1) ? '#' : '*'; 
    for (int i = 0; i < TAM; i++) {
        mapa[0][i] = borderChar;
        mapa[TAM - 1][i] = borderChar;
        mapa[i][0] = borderChar;
        mapa[i][TAM - 1] = borderChar;
    }

    int portaCasaGrandeX, portaCasaGrandeY; 

    if (mapaAtualTipo == 1) { 
       
        for (int i = 2; i < TAM - 2; i++) {
            mapa[i][5] = '#';
            mapa[i][10] = '#';
            mapa[i][15] = '#';
        }
        for (int j = 2; j < TAM - 2; j++) {
            mapa[5][j] = '#';
            mapa[10][j] = '#';
            mapa[15][j] = '#';
        }
       
        mapa[5][6] = '.'; mapa[5][7] = '.';
        mapa[10][11] = '.'; mapa[10][12] = '.';
        mapa[15][4] = '.'; mapa[15][3] = '.';

        
        mapa[12][15] = '.'; 
        mapa[8][15] = '.';  
        mapa[10][13] = '.'; 
        mapa[5][13] = '.';
        mapa[15][7] = '.';  
        mapa[5][7] = '.';   

        
        npcX = -1; 
        npcY = -1;

       
        desenharCasaInvertida(mapa, 10, 2, &portaCasaGrandeX, &portaCasaGrandeY);

       
        mapa[18][18] = '@';

        *playerX = 1;
        *playerY = 1;

    } else { 

        for (int i = 5; i < 15; i++) {
            mapa[10][i] = '*';
        }

        
        desenharCasa2x3(mapa, 3, 2);  
        desenharCasa2x3(mapa, 15, 4); 
        desenharCasa2x3(mapa, 7, 14); 

       
        desenharCasaMaior(mapa, 12, 11, &portaCasaGrandeX, &portaCasaGrandeY);

       
        mapa[5][18] = '@';

        
        *playerX = 1;
        *playerY = 1;
    }
    
    system("cls"); 
    desenharMapa(mapa);
}


// --- Função Principal do Jogo ---
void play() {
    char mapa[TAM][TAM];
    int x = 1, y = 1; // Posição inicial do jogador

    strcpy(falasNPC[0], "Olá! Você deve ser o herói enviado para salvar a vila.");
    strcpy(falasNPC[1], "Nós estivemos com diversos problemas com essa casa que apareceu do nada.");
    strcpy(falasNPC[2], "Perdemos plantações e tivemos diversas pessoas adoecendo; alguns já entraram, mas sempre voltam doentes.");
    strcpy(falasNPC[3], "Para você entrar nesta casa, deve achar a chave que abrirá a porta.");
    strcpy(falasNPC[4], "Tome cuidado, lá tem armadilhas, monstros e teletransportes.");
    strcpy(falasNPC[5], "Boa sorte!!!!");
    
    carregarMapa(mapa, &x, &y, 0); 

    char tecla;

    while (1) {
        moverCursor(x, y);
        printf("&"); // 

        
        char linhaVazia[TAM_FALA * 2 + 1]; 
        memset(linhaVazia, ' ', sizeof(linhaVazia) - 1);
        linhaVazia[sizeof(linhaVazia) - 1] = '\0'; 

        moverCursor(0, TAM);
        printf("%s", linhaVazia); 
        moverCursor(0, TAM + 1); 
        printf("%s", linhaVazia); 
       

        moverCursor(0, TAM);
        printf("Use W A S D para mover, Q para sair. Pressione 'I' para interagir. Chave: %s", temChave ? "SIM" : "NAO");

       
        if (dialogoAtivo) {
            moverCursor(0, TAM + 1);
            printf("NPC: %s", falasNPC[indiceFalaAtual]);
        }

        tecla = _getch();

       
        moverCursor(x, y);
        
        if (mapaAtualTipo == 0 && x == npcX && y == npcY && !dialogoAtivo) {
             printf("P "); 
        } else {
            printf("%c ", mapa[y][x]); 
        }
        
      
        if (tecla == 'q' || tecla == 'Q') break;

        
        if (tecla == 'i' || tecla == 'I') {
            
            if (dialogoAtivo) {
                indiceFalaAtual++;
                if (indiceFalaAtual >= MAX_FALAS) {
                    dialogoAtivo = 0;
                    indiceFalaAtual = 0; 
                    
                    moverCursor(0, TAM + 1);
                    printf("%s", linhaVazia);
                }
            } else { 
                char itemAtual = mapa[y][x]; 

                if (itemAtual == '@') { 
                    temChave = 1;
                    mapa[y][x] = '.'; 

                    
                    for (int i = 0; i < TAM; i++) {
                        for (int j = 0; j < TAM; j++) {
                            if (mapa[i][j] == 'D') {
                                mapa[i][j] = '='; 
                            }
                        }
                    }
                    
                    
                    system("cls");
                    desenharMapa(mapa);
                } 
                
                else if (x == npcX && y == npcY && mapaAtualTipo == 0) {
                    dialogoAtivo = 1; 
                    indiceFalaAtual = 0; 
                }
                
                else if (itemAtual == '=') {
                    if (mapaAtualTipo == 0) { 
                        carregarMapa(mapa, &x, &y, 1); 
                    } else { 
                        carregarMapa(mapa, &x, &y, 0); 
                    }
                }
            }
        }
        // --- Fim da Lógica de Interação ---

       
        int novoX = x, novoY = y;
        if (tecla == 'w') novoY--;
        if (tecla == 's') novoY++;
        if (tecla == 'a') novoX--;
        if (tecla == 'd') novoX++;

       
        if (novoX >= 0 && novoX < TAM && novoY >= 0 && novoY < TAM) {
           
            if (mapa[novoY][novoX] == '#') {
                system("cls");
                printf("\n\nVoce tocou nos espinhos e morreu!\n");
                printf("Fim de jogo. Pressione qualquer tecla para voltar ao menu...\n");
                _getch(); 
                return; 
            }

           
            if (!dialogoAtivo) {
                if (podeMover(mapa, novoX, novoY)) {
                    x = novoX;
                    y = novoY;
                }
            }
        }

        Sleep(30); 
    }

    system("cls");
}

// --- Função de Créditos ---
void credits() {
    system("cls");
    printf("\n=== Creditos ===\n");
    printf("Desenvolvedores: Andre Bispo e Raphael Castro\n");
    printf("Agradecimentos: Ao professor Girotto C\n");
    printf("\nPressione qualquer tecla para voltar ao menu...\n");
    _getch(); 
    system("cls");
}


// --- Função Principal (Menu) ---
int main() {
    setlocale(LC_ALL, "portuguese"); 

    int escolha;
    
    while (1) { // Loop principal do menu
        printf("\n=== Dungeon Crawler ===\n");
        printf("\n=== Menu Principal ===\n");
        printf("1. Jogar\n");
        printf("2. Creditos\n");
        printf("3. Sair\n");
        printf("Escolha uma opcao: ");
        
       
        while (scanf("%d", &escolha) != 1) { 
            printf("Entrada invalida! Por favor, digite um numero: ");
            while (getchar() != '\n'); 
        }
        while (getchar() != '\n'); 

        switch (escolha) {
            case 1: play(); break; 
            case 2: credits(); break;
            case 3: printf("Saindo do Jogo...\n"); return 0; 
            default: printf("Opcao invalida!\n");
        }
    }
    return 0;
}
